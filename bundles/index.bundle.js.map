{"version":3,"sources":["webpack:///webpack/bootstrap ef92aa62d1de64b7bd0b","webpack:///./src/index.js","webpack:///./src/components/SmartForm.js","webpack:///external \"react\"","webpack:///./src/components/DefaultIteratorComponent.js","webpack:///./src/components/DefaultFieldComponent.js","webpack:///external \"lodash/mapValues\"","webpack:///external \"lodash/keyBy\"","webpack:///external \"lodash/get\"","webpack:///./src/utils/getResultOfValidationRule.js","webpack:///external \"react-redux\"","webpack:///external \"redux-form\"","webpack:///./src/utils/resolveCondition.js","webpack:///./src/utils/resolveValue.js","webpack:///./src/defaultValidators.js","webpack:///./src/validators/validateRequired.js","webpack:///./src/validators/validateRequiredIf.js","webpack:///./src/validators/validateRequiredIfEnabled.js","webpack:///./src/validators/validateConditionIsMet.js"],"names":["SmartForm","defaultValidators","state","wholeFormState","form","props","enabledDisabledMap","_enabledDisabledMap","validateSynchronously","bind","renderField","recalculateState","template","formTemplate","listOfEnabledDisabledFlags","listOfFieldNames","map","fieldName","isEnabled","calculateIfFieldIsEnabled","setState","listOfValidationMessages","message","getValidationMessageForField","filter","length","validationMessages","fieldTemplate","fieldsByName","isFieldEnabled","values","getValuesOfCurrentForm","currentValue","validationMeta","context","getValidationContext","Array","isArray","validationRules","messages","validationRule","possibleMessage","join","value","enabledIfCondition","undefined","allValidators","validators","allValues","resolveCondition","resolveValue","formName","getValuesOfForm","formId","fieldComponent","Error","fieldComponentProps","TheIteratorComponent","iteratorComponent","reduxFormProps","defaultProps","FormComponent","children","DefaultFieldComponent","console","warn","getResultOfValidationRule","rule","type","validator","condition","leftValue","rightValue","op","parseFloat","descriptor","indexOf","path","JSON","stringify","Required","RequiredIf","RequiredIfEnabled","ConditionIsMet","validateRequired","hasValue","trim","validateRequiredIf","validateRequiredIfEnabled"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ef92aa62d1de64b7bd0b\n **/","// @flow\nimport SmartForm from './components/SmartForm';\nimport defaultValidators from './defaultValidators';\n\nexport {SmartForm, defaultValidators};\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","// @flow\nimport React, { Component } from 'react';\nimport type {\n  Form, IteratorComponent, FieldComponent, Condition, Value, FieldValidationMeta, FieldValidationRule, ValidatorFunction, ValidationContext\n} from '../types';\nimport DefaultIteratorComponent from './DefaultIteratorComponent';\nimport DefaultFieldComponent from './DefaultFieldComponent';\nimport defaultValidators from '../defaultValidators';\nimport mapValues from 'lodash/mapValues';\nimport keyBy from 'lodash/keyBy';\nimport get from 'lodash/get';\nimport getResultOfValidationRule from '../utils/getResultOfValidationRule';\n// $FlowFixMe\nimport { connect } from 'react-redux';\n// $FlowFixMe\nimport { reduxForm, Field } from 'redux-form';\n\nimport resolveCondition from '../utils/resolveCondition';\nimport resolveValue from '../utils/resolveValue';\n\ntype SmartFormProps = {\n  formTemplate: Form,\n  formId: string,\n  reduxFormProps: Object,\n  iteratorComponent: IteratorComponent,\n  fieldComponent: FieldComponent,\n  wholeFormState: Object,\n  validators: {[type: string]: ValidatorFunction}\n};\n\nexport default connect(\n  (state) => ({ wholeFormState: state.form })\n)(class SmartForm extends Component {\n  props: SmartFormProps;\n  state: {\n    enabledDisabledMap: {[fieldName: string]: boolean}\n  };\n  static defaultProps = {\n    reduxFormProps: {},\n    iteratorComponent: DefaultIteratorComponent,\n    fieldComponent: DefaultFieldComponent,\n    validators: defaultValidators\n  };\n\n  _enabledDisabledMap: {[fieldName: string]: boolean};\n\n  constructor(props: SmartFormProps) {\n    super(props);\n    this.state = {\n      enabledDisabledMap: {}\n    };\n\n    // @todo: This is a hack. Remove it, and use context types instead :)\n    this._enabledDisabledMap = {};\n\n    // $FlowFixMe\n    this.validateSynchronously = this.validateSynchronously.bind(this);\n\n    // $FlowFixMe\n    this.renderField = this.renderField.bind(this);\n  }\n\n  componentWillMount() {\n    this.recalculateState();\n  }\n\n  recalculateState() {\n    const template = this.props.formTemplate;\n    const listOfEnabledDisabledFlags =\n      template.listOfFieldNames\n      .map((fieldName) => ({\n        fieldName,\n        isEnabled: this.calculateIfFieldIsEnabled(fieldName)\n      }));\n\n    const enabledDisabledMap =\n      mapValues(\n        keyBy(listOfEnabledDisabledFlags, 'fieldName'),\n        'isEnabled'\n      );\n\n    this._enabledDisabledMap = enabledDisabledMap;\n    this.setState({ enabledDisabledMap });\n  }\n\n  validateSynchronously() {\n    this.recalculateState();\n    const template = this.props.formTemplate;\n    const listOfValidationMessages =\n      template.listOfFieldNames\n      .map((fieldName) => ({\n        fieldName,\n        message: this.getValidationMessageForField(fieldName)\n      }))\n      .filter(({ message }) => typeof message === 'string' && message.length > 0);\n\n    const validationMessages =\n      mapValues(\n        keyBy(listOfValidationMessages, 'fieldName'),\n        'message'\n      );\n\n    return validationMessages;\n  }\n\n  getValidationMessageForField(fieldName: string): void | string {\n    const formTemplate = this.props.formTemplate;\n    const fieldTemplate = formTemplate.fieldsByName[fieldName];\n    const isEnabled = this.isFieldEnabled(fieldName);\n    const values = this.getValuesOfCurrentForm();\n    const currentValue = values[fieldName];\n    const validationMeta : FieldValidationMeta = get(fieldTemplate, ['meta', 'validation']);\n    const context = this.getValidationContext();\n\n    if (typeof validationMeta !== 'object' || !Array.isArray(validationMeta.validationRules)) {\n      return;\n    }\n\n    const messages =\n      validationMeta.validationRules.map(\n        (validationRule) => getResultOfValidationRule(validationRule, {...context, currentValue, isEnabled})\n      ).filter((possibleMessage) => typeof possibleMessage === 'string');\n\n    if (messages.length > 0) {\n      return messages.join(', ');\n    } else {\n      return;\n    }\n  }\n\n  isFieldEnabled(fieldName: string): boolean {\n    return this._enabledDisabledMap[fieldName] !== false;\n  }\n\n  calculateIfFieldIsEnabled(fieldName: string): boolean {\n    const values = this.getValuesOfCurrentForm();\n    const formTemplate = this.props.formTemplate;\n    const fieldTemplate = formTemplate.fieldsByName[fieldName];\n    const value = values[fieldName];\n    const enabledIfCondition = get(fieldTemplate, ['meta', 'enabledIf']);\n    if (enabledIfCondition === undefined) {\n      return true;\n    } else {\n      return resolveCondition(enabledIfCondition, value, this.getValidationContext());\n    }\n  }\n\n  getValidationContext(): ValidationContext {\n    return {\n      allValidators: this.props.validators,\n      allValues: this.getValuesOfCurrentForm(),\n      resolveCondition, resolveValue\n    };\n  }\n\n  getValueOfField(fieldName: string): mixed {\n    return get(this.getValuesOfCurrentForm(), fieldName);\n  }\n\n  getValuesOfForm(formName: string): Object {\n    return get(this.props.wholeFormState, [formName, 'values']) || {};\n  }\n\n  getValuesOfCurrentForm(): Object {\n    return this.getValuesOfForm(this.props.formId);\n  }\n\n  renderField(fieldName: string) {\n    const { fieldComponent, formTemplate } = this.props;\n    const fieldTemplate = formTemplate.fieldsByName[fieldName];\n    if (!fieldTemplate) {\n      throw new Error(`Unkown field '${fieldName}'`);\n    }\n    const fieldComponentProps = {\n      fieldTemplate: fieldTemplate,\n      isEnabled: this.isFieldEnabled(fieldName)\n    };\n    return <Field key={`field-${fieldName}`} component={fieldComponent} name={fieldName} props={fieldComponentProps} />;\n  }\n\n  render() {\n    const { props } = this;\n    const TheIteratorComponent = props.iteratorComponent;\n\n    return (\n      <FormComponent key=\"form\" {...props.reduxFormProps} keepDirtyOnReinitialize={true} form={props.formId} validate={this.validateSynchronously}>\n        {/* $FlowFixMe */}\n        <TheIteratorComponent key=\"iterator\" formTemplate={this.props.formTemplate} renderField={this.renderField} _smartFormState={this.state} />\n      </FormComponent>\n    );\n  }\n});\n\nconst FormComponent = reduxForm()(({ children }) => children);\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/SmartForm.js\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 2\n ** module chunks = 0\n **/","import React from 'react';\nimport type { IteratorComponentProps } from '../types';\n\nexport default ({ formTemplate, renderField }: IteratorComponentProps) =>\n  (\n    <div key=\"container\">\n    {formTemplate.listOfFieldNames.map((fieldName) => renderField(fieldName))}\n    </div>\n  );\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/DefaultIteratorComponent.js\n **/","// @flow\nimport React, { Component } from 'react';\nimport type { FieldComponentProps } from '../types';\n\nexport default class DefaultFieldComponent extends Component {\n  props: FieldComponentProps;\n\n  constructor(props: FieldComponentProps) {\n    super(props);\n  }\n\n  render() {\n    console.warn('Unimplemented');\n    return <div>Field here</div>;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/DefaultFieldComponent.js\n **/","module.exports = require(\"lodash/mapValues\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash/mapValues\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"lodash/keyBy\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash/keyBy\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"lodash/get\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash/get\"\n ** module id = 7\n ** module chunks = 0\n **/","// @flow\nimport type {FieldValidationRule, PropsToValidator, ValidatorFunctionReturnValue} from '../types';\n\nexport default function getResultOfValidationRule(rule: FieldValidationRule, props: PropsToValidator): ValidatorFunctionReturnValue {\n  const type = typeof rule === 'string' ? rule : rule.type;\n  const validator = props.allValidators[type];\n  if (validator) {\n    return validator(rule, props);\n  } else {\n    throw new Error(`Unkown validator type '${type}'`);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/getResultOfValidationRule.js\n **/","module.exports = require(\"react-redux\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react-redux\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"redux-form\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"redux-form\"\n ** module id = 10\n ** module chunks = 0\n **/","// @flow\nimport type {Condition, ValidationContext} from '../types';\n\nexport default function resolveCondition(condition: Condition, currentValue: mixed, context: ValidationContext): boolean {\n  const {resolveValue} = context;\n  if (typeof condition === 'boolean') {\n    return condition;\n  }\n\n  if (typeof condition === 'object' && condition.type === 'Op') {\n    const leftValue: any = resolveValue(condition.leftValue, currentValue, context);\n    const rightValue: any = resolveValue(condition.rightValue, currentValue, context);\n\n    return (\n        condition.op === '>' ? (parseFloat(leftValue) > parseFloat(rightValue))\n      : condition.op === '>=' ? (parseFloat(leftValue) >= parseFloat(rightValue))\n      : condition.op === '==' ? (leftValue === rightValue)\n      : condition.op === '!=' ? (leftValue !== rightValue)\n      : condition.op === '<' ? (parseFloat(leftValue) < parseFloat(rightValue))\n      : condition.op === '<=' ? (parseFloat(leftValue) <= parseFloat(rightValue))\n      : true\n    );\n  } else {\n    throw new Error('Invalid condition object ' + condition);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/resolveCondition.js\n **/","// @flow\nimport type {Value, ValidationContext} from '../types';\n\nexport default function resolveValue(descriptor: Value, currentValue: mixed, context: ValidationContext): mixed {\n  if (['string', 'boolean', 'number'].indexOf(typeof descriptor) !== -1 || Array.isArray(descriptor)) {\n    return descriptor;\n  }\n\n  const {allValues} = context;\n\n  if (typeof descriptor === 'object' && descriptor.type === 'Reference') {\n    const { path } = descriptor;\n    if (path[0] === '$currentValue' && path.length === 1) {\n      return currentValue;\n    } else if (path[0] === '$currentForm' && path.length === 2) {\n      return allValues[path[1]];\n    } else {\n      throw new Error('Invalid reference path ' + JSON.stringify(path));\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/resolveValue.js\n **/","// @flow\nimport Required from './validators/validateRequired';\nimport RequiredIf from './validators/validateRequiredIf';\nimport RequiredIfEnabled from './validators/validateRequiredIfEnabled';\nimport ConditionIsMet from './validators/validateConditionIsMet';\n\nexport default {Required, RequiredIf, RequiredIfEnabled, ConditionIsMet};\n\n\n/** WEBPACK FOOTER **\n ** ./src/defaultValidators.js\n **/","// @flow\nimport type {PropsToValidator, ValidatorFunctionReturnValue, RequiredValidationRule} from '../types';\n\nexport default function validateRequired(rule: RequiredValidationRule, {currentValue}: PropsToValidator): ValidatorFunctionReturnValue {\n  const hasValue = !(currentValue == null || currentValue == undefined || (typeof currentValue === 'string' && currentValue.trim().length === 0));\n\n  return hasValue ? undefined : rule.message;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/validators/validateRequired.js\n **/","// @flow\nimport type {PropsToValidator, ValidatorFunctionReturnValue, RequiredIfValidationRule, ValidationContext} from '../types';\n\nexport default function validateRequiredIf(rule: RequiredIfValidationRule, props: PropsToValidator & ValidationContext): ValidatorFunctionReturnValue {\n  const {currentValue, resolveCondition} = props;\n  const hasValue = !(currentValue == null || currentValue == undefined || (typeof currentValue === 'string' && currentValue.trim().length === 0));\n\n  return !hasValue && resolveCondition(rule.condition, currentValue, props) ? rule.message : undefined;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/validators/validateRequiredIf.js\n **/","// @flow\nimport type {PropsToValidator, ValidatorFunctionReturnValue, RequiredIfEnabledValidationRule} from '../types';\n\nexport default function validateRequiredIfEnabled(rule: RequiredIfEnabledValidationRule, {currentValue, isEnabled}: PropsToValidator): ValidatorFunctionReturnValue {\n  const hasValue = !(currentValue == null || currentValue == undefined || (typeof currentValue === 'string' && currentValue.trim().length === 0));\n\n  return isEnabled && !hasValue ? rule.message : undefined;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/validators/validateRequiredIfEnabled.js\n **/","// @flow\nimport type {PropsToValidator, ValidatorFunctionReturnValue, ConditionIsMetValidationRule, ValidationContext} from '../types';\n\nexport default function validateRequiredIf(rule: ConditionIsMetValidationRule, props: PropsToValidator & ValidationContext): ValidatorFunctionReturnValue {\n  const {currentValue, resolveCondition} = props;\n\n  return resolveCondition(rule.condition, currentValue, props) ? undefined : rule.message;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/validators/validateConditionIsMet.js\n **/"],"sourceRoot":""}